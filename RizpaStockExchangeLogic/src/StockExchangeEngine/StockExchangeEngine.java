package StockExchangeEngine;

import AutoGenerated.RizpaStockExchangeDescriptor;
import AutoGenerated.RseStock;
import Stocks.Stock;
import Transaction.*;
import XmlRizpaDataExtractor.XmlRizpaDataExtractor;
import java.util.*;

public class StockExchangeEngine implements IStockEngine
{
    private Map<String,Stock> m_AllStocks;
    private List<ITransaction> m_PendingBuyTransactions;
    private List<ITransaction> m_PendingSellTransactions;
    private List<ITransaction> m_Transactions;


    public StockExchangeEngine() {
        this.m_AllStocks = new HashMap<>();
        this.m_Transactions = new LinkedList<>();
        this.m_PendingBuyTransactions = new LinkedList<>();
        this.m_PendingSellTransactions = new LinkedList<>();
    }

    @Override
    public List<ITransaction> getPendingSellTransactions() {
        return m_PendingSellTransactions;
    }

    @Override
    public List<ITransaction> getPendingBuyTransactions() {
        return m_PendingBuyTransactions;
    }

    @Override
    public Map<String,Stock> getStocks() {
        return this.m_AllStocks;
    }

    @Override
    public List<ITransaction> getTransactionList() {
        return m_Transactions;
    }

   // @Override
/*
    public boolean findTransaction(String stockName, double limit, int amountForTransaction) {
        return false;
    }
*/

    @Override
    public void addTransactionsMade(List<TransactionMade> transactionsMade) {
        for (TransactionMade transactionMade:transactionsMade)
        {
            addTransactionMade(transactionMade);
        }
    }

    @Override
    public void addTransactionMade(TransactionMade transactionMade) {
        m_Transactions.add(0,transactionMade);
    }

    @Override
    public boolean getXmlContent(String path,Boolean hasSameCompany,Boolean hasSameName) {
        boolean xmlContentLoaded = true;
        RizpaStockExchangeDescriptor descriptor = XmlRizpaDataExtractor.getStocks(path);
        if(descriptor == null)
        {
            xmlContentLoaded = false;
        }
        else
        {
            loadClasses(descriptor);
        }

        return xmlContentLoaded;
    }

    private void loadClasses(RizpaStockExchangeDescriptor descriptor)
    {
       List<RseStock> stocks = descriptor.getRseStocks().getRseStock();
       for (RseStock stock : stocks)
       {
            m_AllStocks.put(stock.getRseSymbol(),new Stock(stock));
       }
    }
}
